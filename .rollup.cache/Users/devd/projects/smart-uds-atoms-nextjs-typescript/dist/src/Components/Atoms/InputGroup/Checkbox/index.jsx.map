{"version":3,"file":"index.jsx","sourceRoot":"","sources":["../../../../../../src/Components/Atoms/InputGroup/Checkbox/index.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,IAAI,MAAM,YAAY,CAAC;AAE9B,MAAM,QAAQ,GAAG,CAAC,EAChB,OAAO,EACP,KAAK,EACL,aAAa,EACb,IAAI,GAAG,IAAI,EACX,KAAK,EACL,IAAI,EACJ,QAAQ,GAAG,KAAK,EAChB,aAAa,GAAG,KAAK,GACP,EAAE,EAAE;IAClB,MAAM,OAAO,GAAG;QACd,EAAE,EAAE,SAAS;QACb,EAAE,EAAE,SAAS;QACb,EAAE,EAAE,SAAS;KACd,CAAC,IAAI,CAAC,CAAC;IAER,MAAM,QAAQ,GAAG;QACf,EAAE,EAAE,SAAS;QACb,EAAE,EAAE,WAAW;QACf,EAAE,EAAE,SAAS;KACd,CAAC,IAAI,CAAC,CAAC;IAER,MAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAmB,IAAI,CAAC,CAAC;IACtD,MAAM,QAAQ,GAAG,KAAK,IAAI,IAAI,CAAC;IAC/B,MAAM,OAAO,GAAG,GAAG,IAAI,WAAW,CAAC;IACnC,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAC1D,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACnB,IAAI,QAAQ,CAAC,OAAO,EAAE,CAAC;YACrB,QAAQ,CAAC,OAAO,CAAC,aAAa,GAAG,aAAa,CAAC;QACjD,CAAC;IACH,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC;IAEpB,OAAO,CACL,CAAC,GAAG,CACF,WAAW,CAAC,gBAAgB,CAC5B,SAAS,CAAC,CAAC,4BAA4B,QAAQ,CAAC,CAAC,CAAC,+BAA+B,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAEzF;MAAA,CAAC,KAAK,CAAC,SAAS,CAAC,2CAA2C,CAC1D;QAAA,CAAC,KAAK,CACJ,GAAG,CAAC,CAAC,QAAQ,CAAC,CACd,EAAE,CAAC,CAAC,OAAO,CAAC,CACZ,KAAK,CAAC,CAAC,QAAQ,CAAC,CAChB,IAAI,CAAC,UAAU,CACf,OAAO,CAAC,CAAC,SAAS,CAAC,CACnB,QAAQ,CAAC,CAAC,GAAG,EAAE;YACb,YAAY,CAAC,CAAC,SAAS,CAAC,CAAC;YACzB,aAAa,CAAC,CAAC,SAAS,CAAC,CAAC;QAC5B,CAAC,CAAC,CACF,QAAQ,CAAC,CAAC,QAAQ,CAAC,CACnB,SAAS,CAAC,CAAC,mNAAmN,OAAO,IAAI,QAAQ,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC,gBAAgB,IAAI,aAAa,CAAC,CAAC,CAAC,6BAA6B,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CACpV,eAAe,CAAC,CAAC,GAAG,OAAO,QAAQ,CAAC,EAEtC;QAAA,CAAC,IAAI,CAAC,SAAS,CAAC,iKAAiK,CAC/K;UAAA,CAAC,aAAa,CAAC,CAAC,CAAC,CACf,CAAC,GAAG,CACF,SAAS,CAAC,CAAC,GAAG,OAAO,wCAAwC,CAAC,EAC9D,CACH,CAAC,CAAC,CAAC,CACF,CAAC,IAAI,CACH,IAAI,CAAC,CAAC,OAAO,CAAC,CACd,OAAO,CAAC,CAAC,SAAS,CAAC,CACnB,SAAS,CAAC,CAAC,GAAG,OAAO,uBAAuB,CAAC,EAC7C,CACH,CACH;QAAA,EAAE,IAAI,CACR;MAAA,EAAE,KAAK,CACP;MAAA,CAAC,KAAK,CACJ,EAAE,CAAC,CAAC,GAAG,OAAO,QAAQ,CAAC,CACvB,OAAO,CAAC,CAAC,OAAO,CAAC,CACjB,SAAS,CAAC,CAAC,yCAAyC,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CACvG,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,QAAQ,IAAI,CAAC,CAAC,cAAc,EAAE,CAAC,CAE/C;QAAA,CAAC,KAAK,CACR;MAAA,EAAE,KAAK,CACT;IAAA,EAAE,GAAG,CAAC,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,QAAQ,CAAC","sourcesContent":["import React from 'react';\nimport { CheckboxProps } from './CheckboxProps.interface';\nimport Icon from '../../Icon';\n\nconst Checkbox = ({\n  checked,\n  label,\n  toggleChecked,\n  size = 'md',\n  title,\n  name,\n  disabled = false,\n  indeterminate = false,\n}: CheckboxProps) => {\n  const boxSize = {\n    sm: 'h-4 w-4',\n    md: 'h-6 w-6',\n    lg: 'h-8 w-8',\n  }[size];\n\n  const textSize = {\n    sm: 'text-sm',\n    md: 'text-base',\n    lg: 'text-lg',\n  }[size];\n\n  const inputRef = React.useRef<HTMLInputElement>(null);\n  const setTitle = title || name;\n  const inputId = `${name}-checkbox`;\n  const [isChecked, setIsChecked] = React.useState(checked);\n  React.useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.indeterminate = indeterminate;\n    }\n  }, [indeterminate]);\n\n  return (\n    <div\n      data-testid=\"checkmark-icon\"\n      className={`inline-flex items-center ${disabled ? 'cursor-not-allowed opacity-50' : ''}`}\n    >\n      <label className=\"relative flex cursor-pointer items-center\">\n        <input\n          ref={inputRef}\n          id={inputId}\n          title={setTitle}\n          type=\"checkbox\"\n          checked={isChecked}\n          onChange={() => {\n            setIsChecked(!isChecked);\n            toggleChecked(!isChecked);\n          }}\n          disabled={disabled}\n          className={`peer appearance-none rounded-checkbox border border-atom-input/40 bg-atom-input-background/40 shadow transition-all checked:bg-atom-input-background hover:border-atom-input hover:shadow-md focus:outline-none ${boxSize} ${disabled ? 'cursor-not-allowed' : 'cursor-pointer'} ${indeterminate ? 'indeterminate:bg-atom-input' : ''}`}\n          aria-labelledby={`${inputId}-label`}\n        />\n        <span className=\"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 transform text-atom-input-text/60 opacity-0 peer-checked:opacity-100 peer-indeterminate:opacity-100\">\n          {indeterminate ? (\n            <div\n              className={`${boxSize} bg-atom-input-medium rounded-checkbox`}\n            />\n          ) : (\n            <Icon\n              name={'check'}\n              variant={'outline'}\n              className={`${boxSize} text-atom-input-text`}\n            />\n          )}\n        </span>\n      </label>\n      <label\n        id={`${inputId}-label`}\n        htmlFor={inputId}\n        className={`ml-2 font-medium text-atom-input-text ${textSize} ${disabled ? 'cursor-not-allowed' : ''}`}\n        onClick={(e) => disabled && e.preventDefault()}\n      >\n        {label}\n      </label>\n    </div>\n  );\n};\n\nexport default Checkbox;\n"]}