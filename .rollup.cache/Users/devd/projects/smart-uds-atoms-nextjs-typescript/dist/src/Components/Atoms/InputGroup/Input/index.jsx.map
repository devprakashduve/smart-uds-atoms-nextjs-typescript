{"version":3,"file":"index.jsx","sourceRoot":"","sources":["../../../../../../src/Components/Atoms/InputGroup/Input/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport { InputProps, InputSize, InputType } from './InputProps.interface';\nimport './Input.css';\nimport { classNames } from '@/Components/Utilities/componentsMethods';\nimport Label from '../../Label';\nimport Icon from '../../Icon';\n\nconst Input: React.FC<InputProps> = ({\n  value: initialValue,\n  onChange,\n  placeholder = '',\n  disabled = false,\n  type,\n  label,\n  id,\n  name,\n  className,\n  size = InputSize.MD,\n  isRequired,\n  rounded,\n  roundedFull,\n  showIcon = false,\n  customIconSVG,\n  customIconName,\n}) => {\n  const [value, setValue] = useState(initialValue);\n  const [error, setError] = useState('');\n  const [iconName, setIconName] = useState('');\n  const [inputType, setInputType] = useState(type);\n\n  const boxSize = {\n    [InputSize.SM]: 'h-10',\n    [InputSize.MD]: 'h-12',\n    [InputSize.LG]: 'h-14',\n  }[size];\n\n  useEffect(() => {\n    const iconMap: { [key in InputType]?: string } = {\n      [InputType.PASSWORD]: customIconName || 'openEye',\n      [InputType.EMAIL]: customIconName || 'envelop',\n      [InputType.TEL]: customIconName || 'phone',\n      [InputType.TEXT]: customIconName || '',\n      [InputType.NUMBER]: customIconName || '',\n    };\n    setIconName(iconMap[type] || '');\n  }, [type, customIconName]);\n\n  const validateInput = useCallback(\n    (value: string) => {\n      if (isRequired && !value) return 'This field is required.';\n\n      switch (type) {\n        case InputType.EMAIL:\n          const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n          if (!emailRegex.test(value)) return 'Invalid email address.';\n          break;\n        case InputType.NUMBER:\n          if (isNaN(Number(value))) return 'Must be a number.';\n          break;\n        case InputType.TEL:\n          const telRegex = /^\\+?[1-9]\\d{1,14}$/;\n          if (!telRegex.test(value)) return 'Invalid phone number.';\n          break;\n        case InputType.PASSWORD:\n          const passwordRegex =\n            /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n          if (!passwordRegex.test(value))\n            return 'Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, one number, and one special character.';\n          break;\n        default:\n          break;\n      }\n      return '';\n    },\n    [type, isRequired]\n  );\n\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const newValue = e.target.value;\n      setValue(newValue);\n      const errorMessage = validateInput(newValue);\n      setError(errorMessage);\n      onChange?.(newValue);\n    },\n    [onChange, validateInput]\n  );\n\n  const inputClass = classNames(\n    'w-full bg-atom-input-background placeholder:text-atom-input-text/40 text-atom-input-text text-sm border border-atom-input/40 hover:border-atom-input focus:border-atom-input pl-3 pr-10 py-2 transition duration-300 ease focus:outline-none',\n    className,\n    boxSize,\n    error && 'border border-error hover:border-error focus:border-error',\n    rounded && 'rounded',\n    roundedFull && 'rounded-full'\n  );\n\n  return (\n    <div className=\"relative w-full\">\n      {label && (\n        <Label\n          className=\"mb-2 block text-sm text-atom-input-text\"\n          htmlFor={name}\n        >\n          {label}\n          {isRequired && <span className=\"text-error\"> *</span>}\n        </Label>\n      )}\n      <div className=\"relative\">\n        <input\n          title={name}\n          type={inputType}\n          id={id}\n          name={name}\n          value={value}\n          onChange={handleChange}\n          placeholder={placeholder}\n          disabled={disabled}\n          className={`${inputClass} ${disabled ? 'input-disabled' : ''} ${error ? 'input-error' : ''}`}\n          required={isRequired}\n        />\n        {showIcon && (\n          <span\n            className=\"absolute inset-y-0 right-0 flex cursor-pointer items-center pr-3\"\n            onClick={() => {\n              if (type === InputType.PASSWORD) {\n                setIconName(iconName === 'openEye' ? 'closeEye' : 'openEye');\n                setInputType(\n                  inputType === InputType.PASSWORD\n                    ? InputType.TEXT\n                    : InputType.PASSWORD\n                );\n              }\n            }}\n          >\n            {customIconSVG ? (\n              <Icon name={''} variant={'outline'}>\n                {customIconSVG}\n              </Icon>\n            ) : (\n              <Icon name={iconName} variant={'outline'} />\n            )}\n          </span>\n        )}\n      </div>\n      {error && <p className=\"text-error\">{error}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n"]}