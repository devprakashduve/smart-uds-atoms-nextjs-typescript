{"version":3,"file":"index.jsx","sourceRoot":"","sources":["../../../../../../src/Components/Atoms/InputGroup/TextArea/index.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAEnD,OAAO,gBAAgB,CAAC;AAExB,MAAM,QAAQ,GAA4B,CAAC,EACzC,KAAK,GAAG,EAAE,EACV,QAAQ,EACR,WAAW,GAAG,EAAE,EAChB,QAAQ,GAAG,KAAK,EAChB,SAAS,EACT,aAAa,GAAG,KAAK,EACrB,IAAI,GAAG,CAAC,EACR,IAAI,EACJ,SAAS,GAAG,KAAK,EACjB,QAAQ,GAAG,KAAK,EAChB,SAAS,GAAG,EAAE,EACd,EAAE,EACF,YAAY,EAAE,SAAS,EACvB,iBAAiB,EAAE,cAAc,GAClC,EAAE,EAAE;IACH,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IACxC,MAAM,cAAc,GAAG,SAAS,CAAC,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAE/D,SAAS,CAAC,GAAG,EAAE;QACb,OAAO,CAAC,KAAK,CAAC,CAAC;IACjB,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IAEZ,MAAM,gBAAgB,GAAG,CAAC,KAA6C,EAAE,EAAE;QACzE,MAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACpC,IAAI,SAAS,IAAI,QAAQ,CAAC,MAAM,GAAG,SAAS;YAAE,OAAO;QAErD,OAAO,CAAC,QAAQ,CAAC,CAAC;QAClB,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAG,KAAK,CAAC,CAAC;IACpB,CAAC,CAAC;IAEF,OAAO,CACL,CAAC,GAAG,CAAC,SAAS,CAAC,UAAU,CACvB;MAAA,CAAC,QAAQ,CACP,EAAE,CAAC,CAAC,EAAE,CAAC,CACP,KAAK,CAAC,CAAC,IAAI,CAAC,CACZ,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAC3B,WAAW,CAAC,CAAC,WAAW,CAAC,CACzB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CACnB,SAAS,CAAC,CAAC,SAAS,CAAC,CACrB,IAAI,CAAC,CAAC,IAAI,CAAC,CACX,IAAI,CAAC,CAAC,IAAI,CAAC,CACX,SAAS,CAAC,CAAC,SAAS,CAAC,CACrB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CACnB,UAAU,CAAC,CAAC,SAAS,CAAC,CACtB,eAAe,CAAC,CAAC,cAAc,CAAC,CAChC,gBAAgB,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,EAAE,aAAa,CAAC,CAAC,CAAC,SAAS,CAAC,CACjE,SAAS,CAAC,CAAC,iBAAiB,QAAQ,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,IAAI,SAAS,EAAE,CAAC,EAGjF;;MAAA,CAAC,aAAa,IAAI,SAAS,KAAK,SAAS,IAAI,CAC3C,CAAC,GAAG,CACF,EAAE,CAAC,CAAC,GAAG,EAAE,aAAa,CAAC,CACvB,SAAS,CAAC,CAAC,cAAc,cAAc,IAAI,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,IAAI,cAAc,IAAI,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAEjH;UAAA,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAC1B;QAAA,EAAE,GAAG,CAAC,CACP,CACH;IAAA,EAAE,GAAG,CAAC,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,QAAQ,CAAC","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TextAreaProps } from './TextAreaProps.interface';\nimport './TextArea.css';\n\nconst TextArea: React.FC<TextAreaProps> = ({\n  value = '',\n  onChange,\n  placeholder = '',\n  disabled = false,\n  maxLength,\n  showCharCount = false,\n  rows = 4,\n  cols,\n  autoFocus = false,\n  readOnly = false,\n  className = '',\n  id,\n  'aria-label': ariaLabel,\n  'aria-labelledby': ariaLabelledby,\n}) => {\n  const [text, setText] = useState(value);\n  const remainingChars = maxLength ? maxLength - text.length : 0;\n\n  useEffect(() => {\n    setText(value);\n  }, [value]);\n\n  const handleTextChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const newValue = event.target.value;\n    if (maxLength && newValue.length > maxLength) return;\n\n    setText(newValue);\n    onChange?.(event);\n  };\n\n  return (\n    <div className=\"relative\">\n      <textarea\n        id={id}\n        value={text}\n        onChange={handleTextChange}\n        placeholder={placeholder}\n        disabled={disabled}\n        maxLength={maxLength}\n        rows={rows}\n        cols={cols}\n        autoFocus={autoFocus}\n        readOnly={readOnly}\n        aria-label={ariaLabel}\n        aria-labelledby={ariaLabelledby}\n        aria-describedby={showCharCount ? `${id}-char-count` : undefined}\n        className={`textarea-base ${disabled ? 'textarea-disabled' : ''} ${className}`}\n      />\n\n      {showCharCount && maxLength !== undefined && (\n        <div\n          id={`${id}-char-count`}\n          className={`char-count ${remainingChars <= 10 ? 'text-warning' : ''} ${remainingChars <= 0 ? 'text-error' : ''}`}\n        >\n          {text.length}/{maxLength}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TextArea;\n"]}